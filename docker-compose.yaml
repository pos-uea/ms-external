version: "3"

networks: 
  uea-network:
    driver: bridge
    

services:  

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
  #   container_name: elasticsearch
  #   environment:
  #     - node.name=elasticsearch
  #     - cluster.name=es-docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - http.cors.enabled=true
  #     - http.cors.allow-origin="*"
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - ./elasticsearch_data:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks: 
  #       - uea-network
   
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.13.0
  #   container_name: kibana
  #   ports:
  #     - 5601:5601
  #   environment:
  #     ELASTICSEARCH_URL: https://po-s-uea.es.sa-east-1.aws.found.io
  #     ELASTICSEARCH_HOSTS: '["https://po-s-uea.es.sa-east-1.aws.found.io"]'
  #   networks: 
  #       - uea-network

  # metricbeat:
  #   image: docker.elastic.co/beats/metricbeat:7.13.0
  #   container_name: metricbeat
  #   user: root
  #   volumes:      
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./beats/metric/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
  #   restart: on-failure
  #   networks: 
  #     - uea-network

  # heartbeat:
  #   image: docker.elastic.co/beats/heartbeat:7.13.0
  #   container_name: heartbeat
  #   volumes:      
  #   - ./beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
  #   environment: 
  #   - setup.kibana.host=kibana:5601
  #   networks: 
  #     - observability

  # apm:
  #   image: docker.elastic.co/apm/apm-server-oss:7.13.0
  #   container_name: apm
  #   volumes:      
  #   - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
  #   ports:
  #     - "8200:8200"
  #   restart: on-failure
  #   networks: 
  #     - uea-network

  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    ports:
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - uea-network

  # keycloak:
  #   image: quay.io/keycloak/keycloak:21.1
  #   container_name: keycloak
  #   command: start-dev
  #   ports:
  #     - 8080:8080
  #   environment:
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=admin
  #   networks: 
  #     - uea-network

  app_gateway:
    image: manscalh/app-gateway:latest
    container_name: app-gateway
    environment:
    - RMQ_USER=admin
    - RMQ_PASSWORD=admin
    - RMQ_URL=rabbitmq:5672/radiofrequencia
    - RMQ_PROTOCOLO=amqp
    ports:
      - "3000:3000"
      - 443:443
    networks: 
      - uea-network


  app_sensor:
    image: manscalh/app-sensor:latest
    container_name: app-sensor
    environment:
    - RMQ_USER=admin
    - RMQ_PASSWORD=admin
    - RMQ_URL=rabbitmq:5672/radiofrequencia
    - RMQ_PROTOCOLO=amqp
    ports:
      - 3001:3001
    networks: 
      - uea-network

  app_notification:
    image: manscalh/app-notification:latest
    container_name: app-notification
    environment:
    - RMQ_USER=admin
    - RMQ_PASSWORD=admin
    - RMQ_URL=rabbitmq:5672/radiofrequencia
    - RMQ_PROTOCOLO=amqp
    ports:
      - 3002:3002
    networks: 
      - uea-network

  app_reports:
    image: manscalh/app-reports:latest
    container_name: app-reports
    environment:
    - RMQ_USER=admin
    - RMQ_PASSWORD=admin
    - RMQ_URL=rabbitmq:5672/radiofrequencia
    - RMQ_PROTOCOLO=amqp
    ports:
      - 3003:3003
    networks: 
      - uea-network

  app_frontend:
    image: manscalh/frontend-app:latest
    container_name: app_frontend
    environment:
    - VITE_BASE_URL=http://localhost:3000/api/
    ports:
      - 8081:8081
    networks: 
      - uea-network
      
  
# networks: 
#   uea-network:
#     external: true

    

# docker network create uea-network